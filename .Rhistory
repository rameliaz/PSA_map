DF <- read.csv("webinar.viewing.data.csv")
ui <- fluidPage(
HTML('<center> <img src="sainsterbuka-mooc.jpg" align = "middle"> </center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
View(DF)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircleMarkers(lat = ~lat,
lng = ~lng,
radius = 2,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host), "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
)               "<b> Email Co-Host: </b>", email)
})
}
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircleMarkers(lat = ~lat,
lng = ~lng,
radius = 2,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host), "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircleMarkers(lat = ~lat,
lng = ~lng,
radius = 2,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host), "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
})
}
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircleMarkers(lat = ~lat,
lng = ~lng,
radius = 2,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
ui <- fluidPage(
HTML('<center> <img src="sainsterbuka-mooc.jpeg" align = "middle"> </center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircle(lat = ~lat,
lng = ~lng,
radius = 2,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 2,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
ui <- fluidPage(
HTML('<img src="sainsterbuka-mooc.jpeg" align = "middle">'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
shinyApp(ui, server)
ui <- fluidPage(
HTML('<img src="STUA.jpg" align = "middle">'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
shinyApp(ui, server)
shinyApp(ui, server)
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
shinyApp(ui, server)
install.packages("leaflet.extras")
rsconnect::deployApp("D:\Drive\SainsTerbukaUA\IDN_OS_Webinar\webinarsains_map",
appName = "viewing_sites")
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
DF.VIEWING <- gs_read(ss = gs_title("data-shiny"),
na.rm = "N/A")
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
DF.VIEWING$lng <- tmp$lon
DF.VIEWING$lat <- tmp$lat
write.csv(DF.VIEWING, file = "webinar.viewing.data.csv")
rm(DF.VIEWING, tmp)
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
DF <- read.csv("webinar.viewing.data.csv")
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
DF.VIEWING <- gs_read(ss = gs_title("data-shiny"),
na.rm = "N/A")
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
DF.VIEWING$lng <- tmp$lon
DF.VIEWING$lat <- tmp$lat
DF.VIEWING <- gs_read(ss = gs_title("data-shiny"),
na.rm = "N/A")
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
DF.VIEWING$lng <- tmp$lon
DF.VIEWING$lat <- tmp$lat
write.csv(DF.VIEWING, file = "webinar.viewing.data.csv")
rm(DF.VIEWING, tmp)
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
install.packages(c("AER", "anytime", "bayestestR", "BDgraph", "cairoDevice", "citr", "classInt", "covr", "crul", "doParallel", "DT", "emmeans", "forecast", "foreign", "ggforce", "ggplot2", "ggplotify", "ggpubr", "ggsignif", "groupedstats", "httr", "installr", "jomo", "knitr", "lava", "markdown", "modelr", "nlme", "parsnip", "performance", "pkgbuild", "quanteda", "rgeos", "servr", "simstudy", "sjPlot", "tidyLPA", "tidytext", "tinytex", "websocket", "xml2"))
install.packages("polycor", lib="C:/Users/Amelia Zein/Documents/R/win-library/3.6")
install.packages("xml2", dependencies = T)
library("rsconnect")
library("googlesheets")
library("ggmap")
DF.VIEWING <- gs_read(ss = gs_title("data-shiny"),
na.rm = "N/A")
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
register_google(key = "AIzaSyAdye7R7qW98fsDc42jRolp2W3TpUQl1-E") #  to test, comment out this line
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
DF.VIEWING$lng <- tmp$lon
DF.VIEWING$lat <- tmp$lat
write.csv(DF.VIEWING, file = "webinar.viewing.data.csv")
write.csv(DF.VIEWING, file = "webinar.viewing.data.csv")
rm(DF.VIEWING, tmp)
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
library("shiny")
library("shinythemes")
library("shinydashboard")
library("leaflet")
library("leaflet.extras")
library("htmltools")
library("dplyr")
DF <- read.csv("webinar.viewing.data.csv")
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 2)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
install.packages("lsr")
install.packages("tidylsr")
install.packages("tidylsrbook")
library(devtools)
install_github(tidylsr)
install_github(djnavarro/tidylsr)
install_github("djnavarro/tidylsr")
DF <- read.csv("webinar.viewing.data.csv")
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 8)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
library("shiny")
library("shinythemes")
library("shinydashboard")
library("leaflet")
library("leaflet.extras")
library("htmltools")
library("dplyr")
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
# server
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 8)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 5)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 4)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 5)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 4)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
shinyApp(ui, server)
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
