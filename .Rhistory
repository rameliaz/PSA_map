library("shiny")
library("shinythemes")
library("shinydashboard")
library("leaflet")
library("leaflet.extras")
library("htmltools")
library("dplyr")
#----
# Load data
library("rsconnect")
library("googlesheets")
library("ggmap")
DF.VIEWING <- gs_read(ss = gs_title("data-shiny"),
na.rm = "N/A")
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
register_google(key = "AIzaSyAdye7R7qW98fsDc42jRolp2W3TpUQl1-E") #  to test, comment out this line
tmp <- geocode(location = paste0(DF.VIEWING$`universitas`, ",",
DF.VIEWING$`mapinfo`),
output = "latlon",
source = "google") #  to test, change this argument to "dsk"
DF.VIEWING$lng <- tmp$lon
DF.VIEWING$lat <- tmp$lat
write.csv(DF.VIEWING, file = "webinar.viewing.data.csv")
rm(DF.VIEWING, tmp)
DF <- read.csv("webinar.viewing.data.csv")
ui <- fluidPage(
HTML('<center><b>LOKASI PENYIARAN WEBINAR SAINS 2019</b></center>'),
fluidRow(style = "border: 4px double black;",
leafletOutput(outputId = "webinar.map")
)
)
server <- function(input, output, session) {
output$webinar.map <- renderLeaflet({
# build map
leaflet(DF) %>%
setView(lng = 118, lat = -2.5, zoom = 4)  %>% #setting the view over ~ Indonesia
addTiles() %>%
addCircles(lat = ~lat,
lng = ~lng,
radius = 5,
popup = ~paste("<b> ID Lokasi Penyiaran: </b>", ID, "<br>",
"<b> Nama PIC: </b>", PIC, "<br>",
"<b> Nama Host: </b>", host, "<br>",
"<b> Universitas: </b>", universitas, "<br>",
"<b> Nama Kota dan Propinsi: </b>", mapinfo, "<br>",
"<b> Email Co-Host: </b>", email)
)
})
}
rsconnect::deployApp("D:/Drive/SainsTerbukaUA/IDN_OS_Webinar/webinarsains_map",
appName = "viewing_sites")
